
import type { CLevel } from '@/lib/types';

export const C_LEVELS: CLevel[] = [
  {
    title: 'Level 1: Hello, World!',
    description: 'The first step in any programming journey. Complete the code to print "Hello, World!" to the console.',
    codeTemplate: [
      '#include <stdio.h>',
      '',
      'int main() {',
      '    ',
      null,
      ';',
      '    return 0;',
      '}',
    ],
    options: [
      { id: 'c1-opt1', code: 'printf("Hello, World!");' },
      { id: 'c1-opt2', code: 'cout << "Hello, World!";' },
      { id: 'c1-opt3', code: 'print("Hello, World!");' },
    ],
    solution: ['c1-opt1'],
    blanks: 1,
  },
  {
    title: 'Level 2: Variables',
    description: 'Variables store data. Declare an integer variable named "age" and assign it the value 25.',
    codeTemplate: [
      '#include <stdio.h>',
      '',
      'int main() {',
      '    ',
      null,
      ';',
      '    printf("Age is: %d", age);',
      '    return 0;',
      '}',
    ],
    options: [
      { id: 'c2-opt1', code: 'string age = "25"' },
      { id: 'c2-opt2', code: 'int age = 25' },
      { id: 'c2-opt3', code: 'let age = 25' },
    ],
    solution: ['c2-opt2'],
    blanks: 1,
  },
  {
    title: 'Level 3: Simple Loop',
    description: 'Loops repeat actions. Complete the `for` loop to count from 0 to 4.',
    codeTemplate: [
      '#include <stdio.h>',
      '',
      'int main() {',
      '    ',
      null,
      ' {',
      '        printf("%d\\n", i);',
      '    }',
      '    return 0;',
      '}',
    ],
    options: [
      { id: 'c3-opt1', code: 'for (int i = 0; i < 5; i++)' },
      { id: 'c3-opt2', code: 'loop(5)' },
      { id: 'c3-opt3', code: 'for i in range(5)' },
    ],
    solution: ['c3-opt1'],
    blanks: 1,
  },
  {
    title: 'Level 4: Conditionals',
    description: 'Use an `if-else` statement to check if a number is positive or non-positive.',
    codeTemplate: [
      '#include <stdio.h>',
      '',
      'int main() {',
      '    int num = -5;',
      '    ',
      null,
      ' {',
      '        printf("Positive");',
      '    } ',
      null,
      ' {',
      '        printf("Non-Positive");',
      '    }',
      '    return 0;',
      '}',
    ],
    options: [
      { id: 'c4-opt1', code: 'if (num > 0)' },
      { id: 'c4-opt2', code: 'else' },
      { id: 'c4-opt3', code: 'if num > 0:' },
      { id: 'c4-opt4', code: 'otherwise' },
    ],
    solution: ['c4-opt1', 'c4-opt2'],
    blanks: 2,
  },
  {
    title: 'Level 5: Functions',
    description: 'Functions group code into reusable blocks. Call the `greet` function.',
    codeTemplate: [
      '#include <stdio.h>',
      '',
      'void greet() {',
      '    printf("Greetings from a function!");',
      '}',
      '',
      'int main() {',
      '    ',
      null,
      ';',
      '    return 0;',
      '}',
    ],
    options: [
      { id: 'c5-opt1', code: 'run greet()' },
      { id: 'c5-opt2', code: 'greet()' },
      { id: 'c5-opt3', code: 'call greet' },
    ],
    solution: ['c5-opt2'],
    blanks: 1,
  },
];
